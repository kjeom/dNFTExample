{
  "address": "0x86a07434Da8fabFf8D8B3a52E66fa0a7B268e5FB",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "level",
          "type": "uint256"
        }
      ],
      "name": "TokensUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "mob",
          "type": "string"
        }
      ],
      "name": "hunt",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "safeMint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xad601201770bb525308738079922615f6025fc286ce49ee49f01b1caf57f1311",
  "receipt": {
    "to": null,
    "from": "0x7e13Fd24F60A63517D42e8AAF60933259441291f",
    "contractAddress": "0x86a07434Da8fabFf8D8B3a52E66fa0a7B268e5FB",
    "transactionIndex": 0,
    "gasUsed": "3032974",
    "logsBloom": "0x
    "blockHash": "0x8ad13cb0595762489bdc4ecd25cd3881c630f891792680ee10edc35a2c1724a8",
    "transactionHash": "0xad601201770bb525308738079922615f6025fc286ce49ee49f01b1caf57f1311",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 132097876,
        "transactionHash": "0xad601201770bb525308738079922615f6025fc286ce49ee49f01b1caf57f1311",
        "address": "0x86a07434Da8fabFf8D8B3a52E66fa0a7B268e5FB",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000007e13fd24f60a63517d42e8aaf60933259441291f"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x8ad13cb0595762489bdc4ecd25cd3881c630f891792680ee10edc35a2c1724a8"
      }
    ],
    "blockNumber": 132097876,
    "cumulativeGasUsed": "3032974",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 5,
  "solcInputHash": "937a2eb54dbb098ab6a0f0d1ec5d59e4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"}],\"name\":\"TokensUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mob\",\"type\":\"string\"}],\"name\":\"hunt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"safeMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IKIP17-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IKIP17-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IKIP17-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IKIP17-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IKIP17Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IKIP17-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IKIP17-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IKIP17-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IKIP17-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IKIP17Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IKIP17Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IKIP17Enumerable-tokenOfOwnerByIndex}.\"},\"totalSupply()\":{\"details\":\"See {IKIP17Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IKIP17-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/dnft-example.sol\":\"KdynamicNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@klaytn/contracts/KIP/interfaces/IKIP13.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Klaytn Contract Library v1.0.0 (KIP/interfaces/IKIP13.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/introspection/IKIP13.sol\\\";\\n\",\"keccak256\":\"0x538533dcc430536d456ae9e781680ca578ce70bab6b2db7cc18422d2babfd030\",\"license\":\"MIT\"},\"@klaytn/contracts/KIP/token/KIP17/IKIP17.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Klaytn Contract Library v1.0.0 (KIP/token/KIP17/IKIP17.sol)\\n// Based on OpenZeppelin Contracts v4.5.0 (token/ERC721/IERC721.sol)\\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IKIP13.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IKIP17 is IKIP13 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x12805039249aec575fc0ab02485da91649f2740f35eed4c08572c095513cc0d3\",\"license\":\"MIT\"},\"@klaytn/contracts/KIP/token/KIP17/IKIP17Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Klaytn Contract Library v1.0.0 (KIP/token/KIP17/IKIP17Receiver.sol)\\n// Based on OpenZeppelin Contracts v4.5.0 (token/ERC721/IERC721Receiver.sol)\\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title KIP17 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from KIP17 asset contracts.\\n */\\ninterface IKIP17Receiver {\\n    /**\\n     * @dev Whenever an {IKIP17} `tokenId` token is transferred to this contract via {IKIP17-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IKIP17Receiver.onKIp17Received.selector`.\\n     */\\n    function onKIP17Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0x6cd2dc3fa3f2656adb92baddde366f99ec6c9db6e06a1e7d9be345050df2b15d\",\"license\":\"MIT\"},\"@klaytn/contracts/KIP/token/KIP17/KIP17.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Klaytn Contract Library v1.0.0 (KIP/token/KIP17/KIP17.sol)\\n// Based on OpenZeppelin Contracts v4.5.0 (token/ERC721/ERC721.sol)\\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../../utils/Context.sol\\\";\\nimport \\\"../../utils/introspection/KIP13.sol\\\";\\nimport \\\"./extensions/IKIP17Metadata.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\nimport \\\"../../../utils/Strings.sol\\\";\\nimport \\\"./IKIP17Receiver.sol\\\";\\nimport \\\"../../../token/ERC721/IERC721Receiver.sol\\\";\\n\\n/**\\n * @dev Implementation of https://kips.klaytn.com/KIPs/kip-17 Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {KIP17Enumerable}.\\n */\\ncontract KIP17 is Context, KIP13, IKIP17, IKIP17Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IKIP13-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(KIP13, IKIP13) returns (bool) {\\n        return\\n            interfaceId == type(IKIP17).interfaceId ||\\n            interfaceId == type(IKIP17Metadata).interfaceId ||\\n            KIP13.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IKIP17-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"KIP17: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IKIP17-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"KIP17: owner query for nonexistent token\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IKIP17Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IKIP17Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IKIP17Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"KIP17Metadata: URI query for nonexistent token\\\");\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IKIP17-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = KIP17.ownerOf(tokenId);\\n        require(to != owner, \\\"KIP17: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"KIP17: approve caller is not owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IKIP17-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        require(_exists(tokenId), \\\"KIP17: approved query for nonexistent token\\\");\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IKIP17-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IKIP17-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IKIP17-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"KIP17: transfer caller is not owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IKIP17-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IKIP17-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"KIP17: transfer caller is not owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, _data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the KIP17/ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IKIP17Receiver-onKIP17Received}\\n     *   OR {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(\\n            _checkOnKIP17Received(from, to, tokenId, _data) || _checkOnERC721Received(from, to, tokenId, _data),\\n            \\\"KIP17: transfer to non IKIP17Receiver/IERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        require(_exists(tokenId), \\\"KIP17: operator query for nonexistent token\\\");\\n        address owner = KIP17.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IKIP17Receiver-onKIP17Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-KIP17-_safeMint-address-uint256-}[`_safeMint`], with an additional `_data` parameter which is\\n     * forwarded in {IKIP17Receiver-onKIP17Received} OR {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnKIP17Received(address(0), to, tokenId, _data) ||\\n                _checkOnERC721Received(address(0), to, tokenId, _data),\\n            \\\"KIP17: transfer to non IKIP17Receiver/IERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"KIP17: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"KIP17: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = KIP17.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(KIP17.ownerOf(tokenId) == from, \\\"KIP17: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"KIP17: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits a {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(KIP17.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits a {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(\\n        address owner,\\n        address operator,\\n        bool approved\\n    ) internal virtual {\\n        require(owner != operator, \\\"KIP17: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IKIP17Receiver-onKIP17Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnKIP17Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IKIP17Receiver(to).onKIP17Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\\n                return retval == IKIP17Receiver.onKIP17Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    return false;\\n                } else {\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    return false;\\n                } else {\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xf0d3d09792dc1927b44fd220c27823db8e994b3dfecd5cc504f59db66e2518ee\",\"license\":\"MIT\"},\"@klaytn/contracts/KIP/token/KIP17/extensions/IKIP17Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Klaytn Contract Library v1.0.0 (KIP/token/KIP17/extensions/IKIP17Enumerable.sol)\\n// Based on OpenZeppelin Contracts v4.5.0 (token/ERC721/extensions/IERC721Enumerable.sol)\\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IKIP17.sol\\\";\\n\\n/**\\n * @title KIP-17 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://kips.klaytn.com/KIPs/kip-17#enumeration-extension\\n */\\ninterface IKIP17Enumerable is IKIP17 {\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x2776e27768782c72f52b15dd612d5e2a49c87a5d4d6d582cb68bcaa3d5d7dfb3\",\"license\":\"MIT\"},\"@klaytn/contracts/KIP/token/KIP17/extensions/IKIP17Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Klaytn Contract Library v1.0.0 (KIP/token/KIP17/extensions/IKIP17Metadata.sol)\\n// Based on OpenZeppelin Contracts v4.5.0 (token/ERC721/extensions/IERC721Metadata.sol)\\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IKIP17.sol\\\";\\n\\n/**\\n * @title KIP-17 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://kips.klaytn.com/KIPs/kip-17#metadata-extension\\n */\\ninterface IKIP17Metadata is IKIP17 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x9f063faf0b0f42da2557feaa370cf92996be09899c196dd0b99f99ac4242401e\",\"license\":\"MIT\"},\"@klaytn/contracts/KIP/token/KIP17/extensions/KIP17Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Klaytn Contract Library v1.0.0 (KIP/token/KIP17/extensions/KIP17Enumerable.sol)\\n// Based on OpenZeppelin Contracts v4.5.0 (token/ERC721/extensions/ERC721Enumerable.sol)\\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../KIP17.sol\\\";\\nimport \\\"./IKIP17Enumerable.sol\\\";\\n\\n/**\\n * @dev This implements an optional extension of {KIP17} defined in the KIP that adds\\n * enumerability of all the token ids in the contract as well as all token ids owned by each\\n * account.\\n */\\nabstract contract KIP17Enumerable is KIP17, IKIP17Enumerable {\\n    // Mapping from owner to list of owned token IDs\\n    mapping(address => mapping(uint256 => uint256)) private _ownedTokens;\\n\\n    // Mapping from token ID to index of the owner tokens list\\n    mapping(uint256 => uint256) private _ownedTokensIndex;\\n\\n    // Array with all token ids, used for enumeration\\n    uint256[] private _allTokens;\\n\\n    // Mapping from token id to position in the allTokens array\\n    mapping(uint256 => uint256) private _allTokensIndex;\\n\\n    /**\\n     * @dev See {IKIP13-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IKIP13, KIP17) returns (bool) {\\n        return interfaceId == type(IKIP17Enumerable).interfaceId || KIP17.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IKIP17Enumerable-tokenOfOwnerByIndex}.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) public view virtual override returns (uint256) {\\n        require(index < KIP17.balanceOf(owner), \\\"KIP17Enumerable: owner index out of bounds\\\");\\n        return _ownedTokens[owner][index];\\n    }\\n\\n    /**\\n     * @dev See {IKIP17Enumerable-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _allTokens.length;\\n    }\\n\\n    /**\\n     * @dev See {IKIP17Enumerable-tokenByIndex}.\\n     */\\n    function tokenByIndex(uint256 index) public view virtual override returns (uint256) {\\n        require(index < KIP17Enumerable.totalSupply(), \\\"KIP17Enumerable: global index out of bounds\\\");\\n        return _allTokens[index];\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual override {\\n        super._beforeTokenTransfer(from, to, tokenId);\\n\\n        if (from == address(0)) {\\n            _addTokenToAllTokensEnumeration(tokenId);\\n        } else if (from != to) {\\n            _removeTokenFromOwnerEnumeration(from, tokenId);\\n        }\\n        if (to == address(0)) {\\n            _removeTokenFromAllTokensEnumeration(tokenId);\\n        } else if (to != from) {\\n            _addTokenToOwnerEnumeration(to, tokenId);\\n        }\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's ownership-tracking data structures.\\n     * @param to address representing the new owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be added to the tokens list of the given address\\n     */\\n    function _addTokenToOwnerEnumeration(address to, uint256 tokenId) private {\\n        uint256 length = KIP17.balanceOf(to);\\n        _ownedTokens[to][length] = tokenId;\\n        _ownedTokensIndex[tokenId] = length;\\n    }\\n\\n    /**\\n     * @dev Private function to add a token to this extension's token tracking data structures.\\n     * @param tokenId uint256 ID of the token to be added to the tokens list\\n     */\\n    function _addTokenToAllTokensEnumeration(uint256 tokenId) private {\\n        _allTokensIndex[tokenId] = _allTokens.length;\\n        _allTokens.push(tokenId);\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's ownership-tracking data structures. Note that\\n     * while the token is not assigned a new owner, the `_ownedTokensIndex` mapping is _not_ updated: this allows for\\n     * gas optimizations e.g. when performing a transfer operation (avoiding double writes).\\n     * This has O(1) time complexity, but alters the order of the _ownedTokens array.\\n     * @param from address representing the previous owner of the given token ID\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list of the given address\\n     */\\n    function _removeTokenFromOwnerEnumeration(address from, uint256 tokenId) private {\\n        // To prevent a gap in from's tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = KIP17.balanceOf(from) - 1;\\n        uint256 tokenIndex = _ownedTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary\\n        if (tokenIndex != lastTokenIndex) {\\n            uint256 lastTokenId = _ownedTokens[from][lastTokenIndex];\\n\\n            _ownedTokens[from][tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n            _ownedTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n        }\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _ownedTokensIndex[tokenId];\\n        delete _ownedTokens[from][lastTokenIndex];\\n    }\\n\\n    /**\\n     * @dev Private function to remove a token from this extension's token tracking data structures.\\n     * This has O(1) time complexity, but alters the order of the _allTokens array.\\n     * @param tokenId uint256 ID of the token to be removed from the tokens list\\n     */\\n    function _removeTokenFromAllTokensEnumeration(uint256 tokenId) private {\\n        // To prevent a gap in the tokens array, we store the last token in the index of the token to delete, and\\n        // then delete the last slot (swap and pop).\\n\\n        uint256 lastTokenIndex = _allTokens.length - 1;\\n        uint256 tokenIndex = _allTokensIndex[tokenId];\\n\\n        // When the token to delete is the last token, the swap operation is unnecessary. However, since this occurs so\\n        // rarely (when the last minted token is burnt) that we still do the swap here to avoid the gas cost of adding\\n        // an 'if' statement (like in _removeTokenFromOwnerEnumeration)\\n        uint256 lastTokenId = _allTokens[lastTokenIndex];\\n\\n        _allTokens[tokenIndex] = lastTokenId; // Move the last token to the slot of the to-delete token\\n        _allTokensIndex[lastTokenId] = tokenIndex; // Update the moved token's index\\n\\n        // This also deletes the contents at the last position of the array\\n        delete _allTokensIndex[tokenId];\\n        _allTokens.pop();\\n    }\\n}\\n\",\"keccak256\":\"0x9415b18f029ca32c84c9be3ff3351bd68019bd59368f75defaa610a0e1c71c45\",\"license\":\"MIT\"},\"@klaytn/contracts/KIP/token/KIP17/extensions/KIP17URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Klaytn Contract Library v1.0.0 (KIP/token/KIP17/extensions/KIP17URIStorage.sol)\\n// Based on OpenZeppelin Contracts v4.5.0 (token/ERC721/extensions/ERC721URIStorage.sol)\\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../KIP17.sol\\\";\\n\\n/**\\n * @dev KIP17 token with storage based token URI management.\\n */\\nabstract contract KIP17URIStorage is KIP17 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IKIP17Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"KIP17URIStorage: URI query for nonexistent token\\\");\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"KIP17URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x37819c0ba6146cb15917a8183d66b7adb6a82097ff8067a1d926fb7a75b4e11b\",\"license\":\"MIT\"},\"@klaytn/contracts/KIP/utils/introspection/IKIP13.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Klaytn Contract Library v1.0.0 (KIP/utils/introspection/IKIP13.sol)\\n// Based on OpenZeppelin Contracts v4.5.0 (utils/introspection/IERC165.sol)\\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the KIP13 standard as defined in the KIP.\\n *\\n * See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard\\n */\\ninterface IKIP13 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`.\\n     * See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined\\n     * to learn more about how these ids are created.\\n     *\\n     * Requirements:\\n     *\\n     * - implementation of this function call must use less than 30 000 gas\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xb63277576f18a3a05c2ec7736bbb7b4a0bd0d12bbd823a4751144d60273a2c46\",\"license\":\"MIT\"},\"@klaytn/contracts/KIP/utils/introspection/KIP13.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// Klaytn Contract Library v1.0.0 (KIP/utils/introspection/KIP13.sol)\\n// Based on OpenZeppelin Contracts v4.5.0 (utils/introspection/ERC165.sol)\\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../interfaces/IKIP13.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IKIP13} interface.\\n *\\n * Contracts that want to implement KIP13 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {KIP13Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract KIP13 is IKIP13 {\\n    /**\\n     * @dev See {IKIP13-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IKIP13).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x9efe61dd73941b281759ca65eaaa0338c9a4105ba8c5d5c5b4998438830c8ed9\",\"license\":\"MIT\"},\"@klaytn/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@klaytn/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@klaytn/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"@klaytn/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@klaytn/contracts/utils/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\"},\"@klaytn/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n}\\n\",\"keccak256\":\"0xca92905e1626e8567483de21bc1208284865ed7be71d54ca320a140ac25fd290\",\"license\":\"MIT\"},\"contracts/dnft-example.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.13;\\n\\nimport \\\"@klaytn/contracts/KIP/token/KIP17/KIP17.sol\\\";\\nimport \\\"@klaytn/contracts/KIP/token/KIP17/extensions/KIP17Enumerable.sol\\\";\\nimport \\\"@klaytn/contracts/KIP/token/KIP17/extensions/KIP17URIStorage.sol\\\";\\nimport \\\"@klaytn/contracts/utils/Counters.sol\\\";\\nimport \\\"@klaytn/contracts/utils/Strings.sol\\\";\\nimport \\\"@klaytn/contracts/access/Ownable.sol\\\";\\n\\n\\ncontract KdynamicNFT is KIP17, KIP17Enumerable, KIP17URIStorage, Ownable {\\n    using Counters for Counters.Counter;\\n\\n     Counters.Counter private _tokenIdCounter;\\n     mapping(uint256 => uint) _experienceMap;\\n\\n    // IPFS URIs for the dynamic nft graphics/metadata.\\n    // NOTE: These connect to my IPFS Companion node.\\n    // You should upload the contents of the /ipfs folder to your own node for development.\\n    string _level20 = \\\"https://github.com/kjeom/dNFTExample/asset/metadata/level20.json\\\";\\n    string _level50 = \\\"https://github.com/kjeom/dNFTExample/asset/metadata/level50.json\\\";\\n    string _level80 = \\\"https://github.com/kjeom/dNFTExample/asset/metadata/level80.json\\\";\\n\\n    event TokensUpdated(uint level);\\n\\n    constructor() KIP17(\\\"Klaytn dNFT\\\", \\\"KDNFT\\\") {}\\n\\n    function safeMint(address to) public  {\\n        // Current counter value will be the minted token's token ID.\\n        uint256 tokenId = _tokenIdCounter.current();\\n\\n        // Increment it so next time it's correct when we call .current()\\n        _tokenIdCounter.increment();\\n\\n        // Mint the token\\n        _safeMint(to, tokenId);\\n\\n        // Initialize experience\\n        _experienceMap[tokenId] = 0;\\n\\n        // Default to a bull NFT\\n        string memory defaultUri = _level20;\\n        _setTokenURI(tokenId, defaultUri);\\n    }\\n\\n    function hunt(string calldata mob) external  {\\n        if (_compareStrings(mob, \\\"ant\\\")) {\\n            updateExperience(25);\\n        } else if (_compareStrings(mob, \\\"spider\\\")) {\\n            updateExperience(500);\\n        }\\n    }\\n\\n    function updateExperience(uint experience) internal {\\n        uint256 tokenId = _tokenIdCounter.current();\\n        _experienceMap[tokenId] += experience;\\n        if (_experienceMap[tokenId] > 1000) {\\n            // level 80\\n            _setTokenURI(tokenId, _level80);\\n            emit TokensUpdated(80);\\n        } else if (_experienceMap[tokenId] > 50) {\\n            // level 50\\n            _setTokenURI(tokenId, _level50);\\n            emit TokensUpdated(50);\\n        } else {\\n            // level 0\\n            emit TokensUpdated(0);\\n        }\\n    }\\n\\n    function _compareStrings(string memory a, string memory b) internal pure returns (bool) {\\n        return (keccak256(abi.encodePacked((a))) == keccak256(abi.encodePacked((b))));\\n    }\\n    \\n    // The following functions are overrides required by Solidity.\\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId)\\n        internal\\n        override(KIP17, KIP17Enumerable)\\n    {\\n        super._beforeTokenTransfer(from, to, tokenId);\\n    }\\n\\n    function _burn(uint256 tokenId) internal override(KIP17, KIP17URIStorage) {\\n        super._burn(tokenId);\\n    }\\n\\n    function tokenURI(uint256 tokenId)\\n        public\\n        view\\n        override(KIP17, KIP17URIStorage)\\n        returns (string memory)\\n    {\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    function supportsInterface(bytes4 interfaceId)\\n        public\\n        view\\n        override(KIP17, KIP17Enumerable)\\n        returns (bool)\\n    {\\n        return super.supportsInterface(interfaceId);\\n    }\\n}\",\"keccak256\":\"0x2c899175c72c6e6243da045fa37c089a50fa45d45739a951aa6e576178f4311c\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x60e06040908152608081815290620024ed60a039600e9062000022908262000205565b506040518060600160405280604081526020016200256d60409139600f906200004c908262000205565b506040518060600160405280604081526020016200252d6040913960109062000076908262000205565b503480156200008457600080fd5b506040518060400160405280600b81526020016a12db185e5d1b881913919560aa1b8152506040518060400160405280600581526020016412d113919560da1b8152508160009081620000d8919062000205565b506001620000e7828262000205565b50505062000104620000fe6200010a60201b60201c565b6200010e565b620002d1565b3390565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200018b57607f821691505b602082108103620001ac57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200020057600081815260208120601f850160051c81016020861015620001db5750805b601f850160051c820191505b81811015620001fc57828155600101620001e7565b5050505b505050565b81516001600160401b0381111562000221576200022162000160565b620002398162000232845462000176565b84620001b2565b602080601f831160018114620002715760008415620002585750858301515b600019600386901b1c1916600185901b178555620001fc565b600085815260208120601f198616915b82811015620002a25788860151825594840194600190910190840162000281565b5085821015620002c15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61220c80620002e16000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80636352211e116100b857806395d89b411161007c57806395d89b411461027c578063a22cb46514610284578063b88d4fde14610297578063c87b56dd146102aa578063e985e9c5146102bd578063f2fde38b146102f957600080fd5b80636352211e1461022a5780636c76d3be1461023d57806370a0823114610250578063715018a6146102635780638da5cb5b1461026b57600080fd5b806323b872dd116100ff57806323b872dd146101cb5780632f745c59146101de57806340d097c3146101f157806342842e0e146102045780634f6ccce71461021757600080fd5b806301ffc9a71461013c57806306fdde0314610164578063081812fc14610179578063095ea7b3146101a457806318160ddd146101b9575b600080fd5b61014f61014a366004611b6a565b61030c565b60405190151581526020015b60405180910390f35b61016c61031d565b60405161015b9190611bd7565b61018c610187366004611bea565b6103af565b6040516001600160a01b03909116815260200161015b565b6101b76101b2366004611c1f565b61043b565b005b6008545b60405190815260200161015b565b6101b76101d9366004611c49565b610546565b6101bd6101ec366004611c1f565b610577565b6101b76101ff366004611c85565b61060c565b6101b7610212366004611c49565b6106d9565b6101bd610225366004611bea565b6106f4565b61018c610238366004611bea565b610786565b6101b761024b366004611ca0565b6107fc565b6101bd61025e366004611c85565b6108d6565b6101b761095b565b600b546001600160a01b031661018c565b61016c6109c1565b6101b7610292366004611d12565b6109d0565b6101b76102a5366004611d64565b6109db565b61016c6102b8366004611bea565b610a13565b61014f6102cb366004611e40565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101b7610307366004611c85565b610a1e565b600061031782610ae9565b92915050565b60606000805461032c90611e73565b80601f016020809104026020016040519081016040528092919081815260200182805461035890611e73565b80156103a55780601f1061037a576101008083540402835291602001916103a5565b820191906000526020600020905b81548152906001019060200180831161038857829003601f168201915b5050505050905090565b60006103ba82610b0e565b61041f5760405162461bcd60e51b815260206004820152602b60248201527f4b495031373a20617070726f76656420717565727920666f72206e6f6e65786960448201526a39ba32b73a103a37b5b2b760a91b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061044682610786565b9050806001600160a01b0316836001600160a01b0316036104a95760405162461bcd60e51b815260206004820181905260248201527f4b495031373a20617070726f76616c20746f2063757272656e74206f776e65726044820152606401610416565b336001600160a01b03821614806104c557506104c581336102cb565b6105375760405162461bcd60e51b815260206004820152603760248201527f4b495031373a20617070726f76652063616c6c6572206973206e6f74206f776e60448201527f6572206e6f7220617070726f76656420666f7220616c6c0000000000000000006064820152608401610416565b6105418383610b2b565b505050565b6105503382610b99565b61056c5760405162461bcd60e51b815260040161041690611ead565b610541838383610c82565b6000610582836108d6565b82106105e35760405162461bcd60e51b815260206004820152602a60248201527f4b49503137456e756d657261626c653a206f776e657220696e646578206f7574604482015269206f6620626f756e647360b01b6064820152608401610416565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6000610617600c5490565b9050610627600c80546001019055565b6106318282610e27565b6000818152600d60205260408120819055600e805461064f90611e73565b80601f016020809104026020016040519081016040528092919081815260200182805461067b90611e73565b80156106c85780601f1061069d576101008083540402835291602001916106c8565b820191906000526020600020905b8154815290600101906020018083116106ab57829003601f168201915b505050505090506105418282610e41565b610541838383604051806020016040528060008152506109db565b60006106ff60085490565b82106107615760405162461bcd60e51b815260206004820152602b60248201527f4b49503137456e756d657261626c653a20676c6f62616c20696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610416565b6008828154811061077457610774611efd565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806103175760405162461bcd60e51b815260206004820152602860248201527f4b495031373a206f776e657220717565727920666f72206e6f6e657869737465604482015267373a103a37b5b2b760c11b6064820152608401610416565b61085682828080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080518082019091526003815262185b9d60ea1b60208201529150610ec49050565b15610869576108656019610f1d565b5050565b6108c682828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505060408051808201909152600681526539b834b232b960d11b60208201529150610ec49050565b15610865576108656101f4610f1d565b60006001600160a01b03821661093f5760405162461bcd60e51b815260206004820152602860248201527f4b495031373a2061646472657373207a65726f206973206e6f7420612076616c60448201526734b21037bbb732b960c11b6064820152608401610416565b506001600160a01b031660009081526003602052604090205490565b600b546001600160a01b031633146109b55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610416565b6109bf60006110c8565b565b60606001805461032c90611e73565b61086533838361111a565b6109e53383610b99565b610a015760405162461bcd60e51b815260040161041690611ead565b610a0d848484846111e8565b50505050565b60606103178261122d565b600b546001600160a01b03163314610a785760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610416565b6001600160a01b038116610add5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610416565b610ae6816110c8565b50565b60006001600160e01b0319821663780e9d6360e01b148061031757506103178261139a565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610b6082610786565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610ba482610b0e565b610c045760405162461bcd60e51b815260206004820152602b60248201527f4b495031373a206f70657261746f7220717565727920666f72206e6f6e65786960448201526a39ba32b73a103a37b5b2b760a91b6064820152608401610416565b6000610c0f83610786565b9050806001600160a01b0316846001600160a01b03161480610c5657506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610c7a5750836001600160a01b0316610c6f846103af565b6001600160a01b0316145b949350505050565b826001600160a01b0316610c9582610786565b6001600160a01b031614610cf75760405162461bcd60e51b8152602060048201526024808201527f4b495031373a207472616e736665722066726f6d20696e636f7272656374206f6044820152633bb732b960e11b6064820152608401610416565b6001600160a01b038216610d595760405162461bcd60e51b815260206004820152602360248201527f4b495031373a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610416565b610d648383836113ea565b610d6f600082610b2b565b6001600160a01b0383166000908152600360205260408120805460019290610d98908490611f29565b90915550506001600160a01b0382166000908152600360205260408120805460019290610dc6908490611f3c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6108658282604051806020016040528060008152506113f5565b610e4a82610b0e565b610eac5760405162461bcd60e51b815260206004820152602d60248201527f4b4950313755524953746f726167653a2055524920736574206f66206e6f6e6560448201526c3c34b9ba32b73a103a37b5b2b760991b6064820152608401610416565b6000828152600a602052604090206105418282611f9d565b600081604051602001610ed7919061205d565b6040516020818303038152906040528051906020012083604051602001610efe919061205d565b6040516020818303038152906040528051906020012014905092915050565b6000610f28600c5490565b905081600d60008381526020019081526020016000206000828254610f4d9190611f3c565b90915550506000818152600d60205260409020546103e8101561103757610ffe8160108054610f7b90611e73565b80601f0160208091040260200160405190810160405280929190818152602001828054610fa790611e73565b8015610ff45780601f10610fc957610100808354040283529160200191610ff4565b820191906000526020600020905b815481529060010190602001808311610fd757829003601f168201915b5050505050610e41565b604051605081527ff9f09f023fbfb7bdeb798aa50802e70859bc440481c704717e1030095c13e782906020015b60405180910390a15050565b6000818152600d6020526040902054603210156110905761105f81600f8054610f7b90611e73565b604051603281527ff9f09f023fbfb7bdeb798aa50802e70859bc440481c704717e1030095c13e7829060200161102b565b604051600081527ff9f09f023fbfb7bdeb798aa50802e70859bc440481c704717e1030095c13e7829060200160405180910390a15050565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03160361117b5760405162461bcd60e51b815260206004820152601860248201527f4b495031373a20617070726f766520746f2063616c6c657200000000000000006044820152606401610416565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6111f3848484610c82565b6111ff8484848461143b565b8061121157506112118484848461152e565b610a0d5760405162461bcd60e51b815260040161041690612079565b606061123882610b0e565b61129d5760405162461bcd60e51b815260206004820152603060248201527f4b4950313755524953746f726167653a2055524920717565727920666f72206e60448201526f37b732bc34b9ba32b73a103a37b5b2b760811b6064820152608401610416565b6000828152600a6020526040812080546112b690611e73565b80601f01602080910402602001604051908101604052809291908181526020018280546112e290611e73565b801561132f5780601f106113045761010080835404028352916020019161132f565b820191906000526020600020905b81548152906001019060200180831161131257829003601f168201915b50505050509050600061134d60408051602081019091526000815290565b9050805160000361135f575092915050565b8151156113915780826040516020016113799291906120e0565b60405160208183030381529060405292505050919050565b610c7a846115f5565b60006001600160e01b031982166380ac58cd60e01b14806113cb57506001600160e01b03198216635b5e139f60e01b145b8061031757506301ffc9a760e01b6001600160e01b0319831614610317565b6105418383836116cc565b6113ff8383611784565b61140c600084848461143b565b8061141f575061141f600084848461152e565b6105415760405162461bcd60e51b815260040161041690612079565b60006001600160a01b0384163b1561152357604051636745782b60e01b81526001600160a01b03851690636745782b9061147f90339089908890889060040161210f565b6020604051808303816000875af19250505080156114ba575060408051601f3d908101601f191682019092526114b79181019061214c565b60015b611509573d8080156114e8576040519150601f19603f3d011682016040523d82523d6000602084013e6114ed565b606091505b508051600003611501576000915050610c7a565b805181602001fd5b6001600160e01b031916636745782b60e01b149050610c7a565b506001949350505050565b60006001600160a01b0384163b1561152357604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061157290339089908890889060040161210f565b6020604051808303816000875af19250505080156115ad575060408051601f3d908101601f191682019092526115aa9181019061214c565b60015b6115db573d8080156114e8576040519150601f19603f3d011682016040523d82523d6000602084013e6114ed565b6001600160e01b031916630a85bd0160e11b149050610c7a565b606061160082610b0e565b6116635760405162461bcd60e51b815260206004820152602e60248201527f4b495031374d657461646174613a2055524920717565727920666f72206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610416565b600061167a60408051602081019091526000815290565b9050600081511161169a57604051806020016040528060008152506116c5565b806116a4846118c3565b6040516020016116b59291906120e0565b6040516020818303038152906040525b9392505050565b6001600160a01b0383166117275761172281600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b61174a565b816001600160a01b0316836001600160a01b03161461174a5761174a83826119c4565b6001600160a01b0382166117615761054181611a61565b826001600160a01b0316826001600160a01b031614610541576105418282611b10565b6001600160a01b0382166117da5760405162461bcd60e51b815260206004820152601f60248201527f4b495031373a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610416565b6117e381610b0e565b156118305760405162461bcd60e51b815260206004820152601b60248201527f4b495031373a20746f6b656e20616c7265616479206d696e74656400000000006044820152606401610416565b61183c600083836113ea565b6001600160a01b0382166000908152600360205260408120805460019290611865908490611f3c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6060816000036118ea5750506040805180820190915260018152600360fc1b602082015290565b8160005b811561191457806118fe81612169565b915061190d9050600a83612198565b91506118ee565b60008167ffffffffffffffff81111561192f5761192f611d4e565b6040519080825280601f01601f191660200182016040528015611959576020820181803683370190505b5090505b8415610c7a5761196e600183611f29565b915061197b600a866121ac565b611986906030611f3c565b60f81b81838151811061199b5761199b611efd565b60200101906001600160f81b031916908160001a9053506119bd600a86612198565b945061195d565b600060016119d1846108d6565b6119db9190611f29565b600083815260076020526040902054909150808214611a2e576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611a7390600190611f29565b60008381526009602052604081205460088054939450909284908110611a9b57611a9b611efd565b906000526020600020015490508060088381548110611abc57611abc611efd565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611af457611af46121c0565b6001900381819060005260206000200160009055905550505050565b6000611b1b836108d6565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160e01b031981168114610ae657600080fd5b600060208284031215611b7c57600080fd5b81356116c581611b54565b60005b83811015611ba2578181015183820152602001611b8a565b50506000910152565b60008151808452611bc3816020860160208601611b87565b601f01601f19169290920160200192915050565b6020815260006116c56020830184611bab565b600060208284031215611bfc57600080fd5b5035919050565b80356001600160a01b0381168114611c1a57600080fd5b919050565b60008060408385031215611c3257600080fd5b611c3b83611c03565b946020939093013593505050565b600080600060608486031215611c5e57600080fd5b611c6784611c03565b9250611c7560208501611c03565b9150604084013590509250925092565b600060208284031215611c9757600080fd5b6116c582611c03565b60008060208385031215611cb357600080fd5b823567ffffffffffffffff80821115611ccb57600080fd5b818501915085601f830112611cdf57600080fd5b813581811115611cee57600080fd5b866020828501011115611d0057600080fd5b60209290920196919550909350505050565b60008060408385031215611d2557600080fd5b611d2e83611c03565b915060208301358015158114611d4357600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215611d7a57600080fd5b611d8385611c03565b9350611d9160208601611c03565b925060408501359150606085013567ffffffffffffffff80821115611db557600080fd5b818701915087601f830112611dc957600080fd5b813581811115611ddb57611ddb611d4e565b604051601f8201601f19908116603f01168101908382118183101715611e0357611e03611d4e565b816040528281528a6020848701011115611e1c57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215611e5357600080fd5b611e5c83611c03565b9150611e6a60208401611c03565b90509250929050565b600181811c90821680611e8757607f821691505b602082108103611ea757634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526030908201527f4b495031373a207472616e736665722063616c6c6572206973206e6f74206f7760408201526f1b995c881b9bdc88185c1c1c9bdd995960821b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561031757610317611f13565b8082018082111561031757610317611f13565b601f82111561054157600081815260208120601f850160051c81016020861015611f765750805b601f850160051c820191505b81811015611f9557828155600101611f82565b505050505050565b815167ffffffffffffffff811115611fb757611fb7611d4e565b611fcb81611fc58454611e73565b84611f4f565b602080601f8311600181146120005760008415611fe85750858301515b600019600386901b1c1916600185901b178555611f95565b600085815260208120601f198616915b8281101561202f57888601518255948401946001909101908401612010565b508582101561204d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000825161206f818460208701611b87565b9190910192915050565b60208082526041908201527f4b495031373a207472616e7366657220746f206e6f6e20494b4950313752656360408201527f65697665722f49455243373231526563656976657220696d706c656d656e74656060820152603960f91b608082015260a00190565b600083516120f2818460208801611b87565b835190830190612106818360208801611b87565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061214290830184611bab565b9695505050505050565b60006020828403121561215e57600080fd5b81516116c581611b54565b60006001820161217b5761217b611f13565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826121a7576121a7612182565b500490565b6000826121bb576121bb612182565b500690565b634e487b7160e01b600052603160045260246000fdfea26469706673582212207499b026b010795aa322058b1cb10d5bb4b1c526dd90291c2a1ba8acb08124ea64736f6c6343000812003368747470733a2f2f6769746875622e636f6d2f6b6a656f6d2f644e46544578616d706c652f61737365742f6d657461646174612f6c6576656c32302e6a736f6e68747470733a2f2f6769746875622e636f6d2f6b6a656f6d2f644e46544578616d706c652f61737365742f6d657461646174612f6c6576656c38302e6a736f6e68747470733a2f2f6769746875622e636f6d2f6b6a656f6d2f644e46544578616d706c652f61737365742f6d657461646174612f6c6576656c35302e6a736f6e",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c80636352211e116100b857806395d89b411161007c57806395d89b411461027c578063a22cb46514610284578063b88d4fde14610297578063c87b56dd146102aa578063e985e9c5146102bd578063f2fde38b146102f957600080fd5b80636352211e1461022a5780636c76d3be1461023d57806370a0823114610250578063715018a6146102635780638da5cb5b1461026b57600080fd5b806323b872dd116100ff57806323b872dd146101cb5780632f745c59146101de57806340d097c3146101f157806342842e0e146102045780634f6ccce71461021757600080fd5b806301ffc9a71461013c57806306fdde0314610164578063081812fc14610179578063095ea7b3146101a457806318160ddd146101b9575b600080fd5b61014f61014a366004611b6a565b61030c565b60405190151581526020015b60405180910390f35b61016c61031d565b60405161015b9190611bd7565b61018c610187366004611bea565b6103af565b6040516001600160a01b03909116815260200161015b565b6101b76101b2366004611c1f565b61043b565b005b6008545b60405190815260200161015b565b6101b76101d9366004611c49565b610546565b6101bd6101ec366004611c1f565b610577565b6101b76101ff366004611c85565b61060c565b6101b7610212366004611c49565b6106d9565b6101bd610225366004611bea565b6106f4565b61018c610238366004611bea565b610786565b6101b761024b366004611ca0565b6107fc565b6101bd61025e366004611c85565b6108d6565b6101b761095b565b600b546001600160a01b031661018c565b61016c6109c1565b6101b7610292366004611d12565b6109d0565b6101b76102a5366004611d64565b6109db565b61016c6102b8366004611bea565b610a13565b61014f6102cb366004611e40565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6101b7610307366004611c85565b610a1e565b600061031782610ae9565b92915050565b60606000805461032c90611e73565b80601f016020809104026020016040519081016040528092919081815260200182805461035890611e73565b80156103a55780601f1061037a576101008083540402835291602001916103a5565b820191906000526020600020905b81548152906001019060200180831161038857829003601f168201915b5050505050905090565b60006103ba82610b0e565b61041f5760405162461bcd60e51b815260206004820152602b60248201527f4b495031373a20617070726f76656420717565727920666f72206e6f6e65786960448201526a39ba32b73a103a37b5b2b760a91b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061044682610786565b9050806001600160a01b0316836001600160a01b0316036104a95760405162461bcd60e51b815260206004820181905260248201527f4b495031373a20617070726f76616c20746f2063757272656e74206f776e65726044820152606401610416565b336001600160a01b03821614806104c557506104c581336102cb565b6105375760405162461bcd60e51b815260206004820152603760248201527f4b495031373a20617070726f76652063616c6c6572206973206e6f74206f776e60448201527f6572206e6f7220617070726f76656420666f7220616c6c0000000000000000006064820152608401610416565b6105418383610b2b565b505050565b6105503382610b99565b61056c5760405162461bcd60e51b815260040161041690611ead565b610541838383610c82565b6000610582836108d6565b82106105e35760405162461bcd60e51b815260206004820152602a60248201527f4b49503137456e756d657261626c653a206f776e657220696e646578206f7574604482015269206f6620626f756e647360b01b6064820152608401610416565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6000610617600c5490565b9050610627600c80546001019055565b6106318282610e27565b6000818152600d60205260408120819055600e805461064f90611e73565b80601f016020809104026020016040519081016040528092919081815260200182805461067b90611e73565b80156106c85780601f1061069d576101008083540402835291602001916106c8565b820191906000526020600020905b8154815290600101906020018083116106ab57829003601f168201915b505050505090506105418282610e41565b610541838383604051806020016040528060008152506109db565b60006106ff60085490565b82106107615760405162461bcd60e51b815260206004820152602b60248201527f4b49503137456e756d657261626c653a20676c6f62616c20696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610416565b6008828154811061077457610774611efd565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806103175760405162461bcd60e51b815260206004820152602860248201527f4b495031373a206f776e657220717565727920666f72206e6f6e657869737465604482015267373a103a37b5b2b760c11b6064820152608401610416565b61085682828080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050604080518082019091526003815262185b9d60ea1b60208201529150610ec49050565b15610869576108656019610f1d565b5050565b6108c682828080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505060408051808201909152600681526539b834b232b960d11b60208201529150610ec49050565b15610865576108656101f4610f1d565b60006001600160a01b03821661093f5760405162461bcd60e51b815260206004820152602860248201527f4b495031373a2061646472657373207a65726f206973206e6f7420612076616c60448201526734b21037bbb732b960c11b6064820152608401610416565b506001600160a01b031660009081526003602052604090205490565b600b546001600160a01b031633146109b55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610416565b6109bf60006110c8565b565b60606001805461032c90611e73565b61086533838361111a565b6109e53383610b99565b610a015760405162461bcd60e51b815260040161041690611ead565b610a0d848484846111e8565b50505050565b60606103178261122d565b600b546001600160a01b03163314610a785760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610416565b6001600160a01b038116610add5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610416565b610ae6816110c8565b50565b60006001600160e01b0319821663780e9d6360e01b148061031757506103178261139a565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610b6082610786565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610ba482610b0e565b610c045760405162461bcd60e51b815260206004820152602b60248201527f4b495031373a206f70657261746f7220717565727920666f72206e6f6e65786960448201526a39ba32b73a103a37b5b2b760a91b6064820152608401610416565b6000610c0f83610786565b9050806001600160a01b0316846001600160a01b03161480610c5657506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610c7a5750836001600160a01b0316610c6f846103af565b6001600160a01b0316145b949350505050565b826001600160a01b0316610c9582610786565b6001600160a01b031614610cf75760405162461bcd60e51b8152602060048201526024808201527f4b495031373a207472616e736665722066726f6d20696e636f7272656374206f6044820152633bb732b960e11b6064820152608401610416565b6001600160a01b038216610d595760405162461bcd60e51b815260206004820152602360248201527f4b495031373a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610416565b610d648383836113ea565b610d6f600082610b2b565b6001600160a01b0383166000908152600360205260408120805460019290610d98908490611f29565b90915550506001600160a01b0382166000908152600360205260408120805460019290610dc6908490611f3c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6108658282604051806020016040528060008152506113f5565b610e4a82610b0e565b610eac5760405162461bcd60e51b815260206004820152602d60248201527f4b4950313755524953746f726167653a2055524920736574206f66206e6f6e6560448201526c3c34b9ba32b73a103a37b5b2b760991b6064820152608401610416565b6000828152600a602052604090206105418282611f9d565b600081604051602001610ed7919061205d565b6040516020818303038152906040528051906020012083604051602001610efe919061205d565b6040516020818303038152906040528051906020012014905092915050565b6000610f28600c5490565b905081600d60008381526020019081526020016000206000828254610f4d9190611f3c565b90915550506000818152600d60205260409020546103e8101561103757610ffe8160108054610f7b90611e73565b80601f0160208091040260200160405190810160405280929190818152602001828054610fa790611e73565b8015610ff45780601f10610fc957610100808354040283529160200191610ff4565b820191906000526020600020905b815481529060010190602001808311610fd757829003601f168201915b5050505050610e41565b604051605081527ff9f09f023fbfb7bdeb798aa50802e70859bc440481c704717e1030095c13e782906020015b60405180910390a15050565b6000818152600d6020526040902054603210156110905761105f81600f8054610f7b90611e73565b604051603281527ff9f09f023fbfb7bdeb798aa50802e70859bc440481c704717e1030095c13e7829060200161102b565b604051600081527ff9f09f023fbfb7bdeb798aa50802e70859bc440481c704717e1030095c13e7829060200160405180910390a15050565b600b80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03160361117b5760405162461bcd60e51b815260206004820152601860248201527f4b495031373a20617070726f766520746f2063616c6c657200000000000000006044820152606401610416565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6111f3848484610c82565b6111ff8484848461143b565b8061121157506112118484848461152e565b610a0d5760405162461bcd60e51b815260040161041690612079565b606061123882610b0e565b61129d5760405162461bcd60e51b815260206004820152603060248201527f4b4950313755524953746f726167653a2055524920717565727920666f72206e60448201526f37b732bc34b9ba32b73a103a37b5b2b760811b6064820152608401610416565b6000828152600a6020526040812080546112b690611e73565b80601f01602080910402602001604051908101604052809291908181526020018280546112e290611e73565b801561132f5780601f106113045761010080835404028352916020019161132f565b820191906000526020600020905b81548152906001019060200180831161131257829003601f168201915b50505050509050600061134d60408051602081019091526000815290565b9050805160000361135f575092915050565b8151156113915780826040516020016113799291906120e0565b60405160208183030381529060405292505050919050565b610c7a846115f5565b60006001600160e01b031982166380ac58cd60e01b14806113cb57506001600160e01b03198216635b5e139f60e01b145b8061031757506301ffc9a760e01b6001600160e01b0319831614610317565b6105418383836116cc565b6113ff8383611784565b61140c600084848461143b565b8061141f575061141f600084848461152e565b6105415760405162461bcd60e51b815260040161041690612079565b60006001600160a01b0384163b1561152357604051636745782b60e01b81526001600160a01b03851690636745782b9061147f90339089908890889060040161210f565b6020604051808303816000875af19250505080156114ba575060408051601f3d908101601f191682019092526114b79181019061214c565b60015b611509573d8080156114e8576040519150601f19603f3d011682016040523d82523d6000602084013e6114ed565b606091505b508051600003611501576000915050610c7a565b805181602001fd5b6001600160e01b031916636745782b60e01b149050610c7a565b506001949350505050565b60006001600160a01b0384163b1561152357604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061157290339089908890889060040161210f565b6020604051808303816000875af19250505080156115ad575060408051601f3d908101601f191682019092526115aa9181019061214c565b60015b6115db573d8080156114e8576040519150601f19603f3d011682016040523d82523d6000602084013e6114ed565b6001600160e01b031916630a85bd0160e11b149050610c7a565b606061160082610b0e565b6116635760405162461bcd60e51b815260206004820152602e60248201527f4b495031374d657461646174613a2055524920717565727920666f72206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610416565b600061167a60408051602081019091526000815290565b9050600081511161169a57604051806020016040528060008152506116c5565b806116a4846118c3565b6040516020016116b59291906120e0565b6040516020818303038152906040525b9392505050565b6001600160a01b0383166117275761172281600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b61174a565b816001600160a01b0316836001600160a01b03161461174a5761174a83826119c4565b6001600160a01b0382166117615761054181611a61565b826001600160a01b0316826001600160a01b031614610541576105418282611b10565b6001600160a01b0382166117da5760405162461bcd60e51b815260206004820152601f60248201527f4b495031373a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610416565b6117e381610b0e565b156118305760405162461bcd60e51b815260206004820152601b60248201527f4b495031373a20746f6b656e20616c7265616479206d696e74656400000000006044820152606401610416565b61183c600083836113ea565b6001600160a01b0382166000908152600360205260408120805460019290611865908490611f3c565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6060816000036118ea5750506040805180820190915260018152600360fc1b602082015290565b8160005b811561191457806118fe81612169565b915061190d9050600a83612198565b91506118ee565b60008167ffffffffffffffff81111561192f5761192f611d4e565b6040519080825280601f01601f191660200182016040528015611959576020820181803683370190505b5090505b8415610c7a5761196e600183611f29565b915061197b600a866121ac565b611986906030611f3c565b60f81b81838151811061199b5761199b611efd565b60200101906001600160f81b031916908160001a9053506119bd600a86612198565b945061195d565b600060016119d1846108d6565b6119db9190611f29565b600083815260076020526040902054909150808214611a2e576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611a7390600190611f29565b60008381526009602052604081205460088054939450909284908110611a9b57611a9b611efd565b906000526020600020015490508060088381548110611abc57611abc611efd565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611af457611af46121c0565b6001900381819060005260206000200160009055905550505050565b6000611b1b836108d6565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160e01b031981168114610ae657600080fd5b600060208284031215611b7c57600080fd5b81356116c581611b54565b60005b83811015611ba2578181015183820152602001611b8a565b50506000910152565b60008151808452611bc3816020860160208601611b87565b601f01601f19169290920160200192915050565b6020815260006116c56020830184611bab565b600060208284031215611bfc57600080fd5b5035919050565b80356001600160a01b0381168114611c1a57600080fd5b919050565b60008060408385031215611c3257600080fd5b611c3b83611c03565b946020939093013593505050565b600080600060608486031215611c5e57600080fd5b611c6784611c03565b9250611c7560208501611c03565b9150604084013590509250925092565b600060208284031215611c9757600080fd5b6116c582611c03565b60008060208385031215611cb357600080fd5b823567ffffffffffffffff80821115611ccb57600080fd5b818501915085601f830112611cdf57600080fd5b813581811115611cee57600080fd5b866020828501011115611d0057600080fd5b60209290920196919550909350505050565b60008060408385031215611d2557600080fd5b611d2e83611c03565b915060208301358015158114611d4357600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215611d7a57600080fd5b611d8385611c03565b9350611d9160208601611c03565b925060408501359150606085013567ffffffffffffffff80821115611db557600080fd5b818701915087601f830112611dc957600080fd5b813581811115611ddb57611ddb611d4e565b604051601f8201601f19908116603f01168101908382118183101715611e0357611e03611d4e565b816040528281528a6020848701011115611e1c57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215611e5357600080fd5b611e5c83611c03565b9150611e6a60208401611c03565b90509250929050565b600181811c90821680611e8757607f821691505b602082108103611ea757634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526030908201527f4b495031373a207472616e736665722063616c6c6572206973206e6f74206f7760408201526f1b995c881b9bdc88185c1c1c9bdd995960821b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8181038181111561031757610317611f13565b8082018082111561031757610317611f13565b601f82111561054157600081815260208120601f850160051c81016020861015611f765750805b601f850160051c820191505b81811015611f9557828155600101611f82565b505050505050565b815167ffffffffffffffff811115611fb757611fb7611d4e565b611fcb81611fc58454611e73565b84611f4f565b602080601f8311600181146120005760008415611fe85750858301515b600019600386901b1c1916600185901b178555611f95565b600085815260208120601f198616915b8281101561202f57888601518255948401946001909101908401612010565b508582101561204d5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000825161206f818460208701611b87565b9190910192915050565b60208082526041908201527f4b495031373a207472616e7366657220746f206e6f6e20494b4950313752656360408201527f65697665722f49455243373231526563656976657220696d706c656d656e74656060820152603960f91b608082015260a00190565b600083516120f2818460208801611b87565b835190830190612106818360208801611b87565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061214290830184611bab565b9695505050505050565b60006020828403121561215e57600080fd5b81516116c581611b54565b60006001820161217b5761217b611f13565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826121a7576121a7612182565b500490565b6000826121bb576121bb612182565b500690565b634e487b7160e01b600052603160045260246000fdfea26469706673582212207499b026b010795aa322058b1cb10d5bb4b1c526dd90291c2a1ba8acb08124ea64736f6c63430008120033",
  "devdoc": {
    "events": {
      "Approval(address,address,uint256)": {
        "details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
      },
      "ApprovalForAll(address,address,bool)": {
        "details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
      },
      "Transfer(address,address,uint256)": {
        "details": "Emitted when `tokenId` token is transferred from `from` to `to`."
      }
    },
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IKIP17-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IKIP17-balanceOf}."
      },
      "getApproved(uint256)": {
        "details": "See {IKIP17-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IKIP17-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IKIP17Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IKIP17-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IKIP17-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IKIP17-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IKIP17-setApprovalForAll}."
      },
      "symbol()": {
        "details": "See {IKIP17Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IKIP17Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IKIP17Enumerable-tokenOfOwnerByIndex}."
      },
      "totalSupply()": {
        "details": "See {IKIP17Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IKIP17-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 162,
        "contract": "contracts/dnft-example.sol:KdynamicNFT",
        "label": "_name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 164,
        "contract": "contracts/dnft-example.sol:KdynamicNFT",
        "label": "_symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 168,
        "contract": "contracts/dnft-example.sol:KdynamicNFT",
        "label": "_owners",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 172,
        "contract": "contracts/dnft-example.sol:KdynamicNFT",
        "label": "_balances",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 176,
        "contract": "contracts/dnft-example.sol:KdynamicNFT",
        "label": "_tokenApprovals",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 182,
        "contract": "contracts/dnft-example.sol:KdynamicNFT",
        "label": "_operatorApprovals",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 1150,
        "contract": "contracts/dnft-example.sol:KdynamicNFT",
        "label": "_ownedTokens",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))"
      },
      {
        "astId": 1154,
        "contract": "contracts/dnft-example.sol:KdynamicNFT",
        "label": "_ownedTokensIndex",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 1157,
        "contract": "contracts/dnft-example.sol:KdynamicNFT",
        "label": "_allTokens",
        "offset": 0,
        "slot": "8",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 1161,
        "contract": "contracts/dnft-example.sol:KdynamicNFT",
        "label": "_allTokensIndex",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 1486,
        "contract": "contracts/dnft-example.sol:KdynamicNFT",
        "label": "_tokenURIs",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_string_storage)"
      },
      {
        "astId": 1645,
        "contract": "contracts/dnft-example.sol:KdynamicNFT",
        "label": "_owner",
        "offset": 0,
        "slot": "11",
        "type": "t_address"
      },
      {
        "astId": 2400,
        "contract": "contracts/dnft-example.sol:KdynamicNFT",
        "label": "_tokenIdCounter",
        "offset": 0,
        "slot": "12",
        "type": "t_struct(Counter)2083_storage"
      },
      {
        "astId": 2404,
        "contract": "contracts/dnft-example.sol:KdynamicNFT",
        "label": "_experienceMap",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_uint256,t_uint256)"
      },
      {
        "astId": 2407,
        "contract": "contracts/dnft-example.sol:KdynamicNFT",
        "label": "_level20",
        "offset": 0,
        "slot": "14",
        "type": "t_string_storage"
      },
      {
        "astId": 2410,
        "contract": "contracts/dnft-example.sol:KdynamicNFT",
        "label": "_level50",
        "offset": 0,
        "slot": "15",
        "type": "t_string_storage"
      },
      {
        "astId": 2413,
        "contract": "contracts/dnft-example.sol:KdynamicNFT",
        "label": "_level80",
        "offset": 0,
        "slot": "16",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Counter)2083_storage": {
        "encoding": "inplace",
        "label": "struct Counters.Counter",
        "members": [
          {
            "astId": 2082,
            "contract": "contracts/dnft-example.sol:KdynamicNFT",
            "label": "_value",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}